version: 2.1

jobs:
  deploy:
    docker:
      - image: cimg/base:2023.06
    parameters:
      ssh:
        type: string
        default: "ssh -o StrictHostKeyChecking=no $JOBRUNNER_SSH_USER@$JOBRUNNER_SSH_HOST JOBRUNNER_DIR=$JOBRUNNER_DIR"
      scp:
        type: string
        default: "scp -o StrictHostKeyChecking=no"
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "${JOBRUNNER_FINGERPRINT}"
            - "${JOBRUNNER_PROD_FINGERPRINT}"
      - run:
          name: Set up SSH forwarding
          command: |
            echo "Host *" >> ~/.ssh/config
            echo "  ForwardAgent yes" >> ~/.ssh/config
            chmod 600 ~/.ssh/config
      - run:
          name: Add SSH forwarding
          command: |
            eval `ssh-agent -s` && ssh-add -k
      - run:
          name: Print environment vars
          command: printenv
      - run:
          name: Pull Latest Head of Main
          command: |
            << parameters.ssh >> "cd $JOBRUNNER_DIR/jobrunner && git checkout main && git pull"
      - run:
          name: Set up server's environment variables
          description: |
            Sets up the server's environment variables. Avoid using ssh to source the variables in this step.
            It can cause an exit 255 since the scp command precedes it.
          command: |
            echo "export SCOPULI_PROD_PG_HOST=${SCOPULI_PROD_PG_HOST}" >> .env
            echo "export SCOPULI_PROD_PG_USERNAME=${SCOPULI_PROD_PG_USERNAME}" >> .env
            echo "export SCOPULI_PROD_PG_PASSWORD=${SCOPULI_PROD_PG_PASSWORD}" >> .env
            echo "export SCOPULI_PROD_PG_PORT=${SCOPULI_PROD_PG_PORT}" >> .env
            echo "export SCOPULI_ENV=${SCOPULI_ENV}" >> .env
            echo "export SCOPULI_RUNNER_DIR=${SCOPULI_RUNNER_DIR}" >> .env
            << parameters.scp >> .env $SCOPULI_RUNNER_SSH_USER@$SCOPULI_RUNNER_SSH_HOST:/home/circleci/.env
      - run:
          name: Display file structure
          command: |
            "ls && pwd"
      - run:
          name: Update the cron schedule
          command: |
            << parameters.ssh >> "bash $JOBRUNNER_DIR/jobrunner/schedule.sh"
      - run: 
          name: Check crontab
          command: |
            << parameters.ssh >> "crontab -l"
#            if grep -q "0 0 1 */1 * python aethervest/statcan/cpi_monthly_1810000401/loader.py" <<< "crontab -l"; then
#              echo "Monthly CPI loader job found in crontab."
#            else
#             echo "Monthly CPI loader job not found in crontab."
#            fi
#           if grep -q "0 0 1 */1 * python aethervest/statcan/food_prices_1810024501/loader.py" <<< "crontab -l"; then
#             echo "Food price loader job found in crontab."
#            else
#             echo "Food price loader job not found in crontab"
#           fi
  test:
    docker:
      - image: cimg/base:2023.06
    steps:
      - run:
          name: Test push to remote main trigger
          command: |
            echo "new commit to main"

workflows:
  deploy-to-prod:
    jobs:
      - deploy:
          context:
            - aethersphere-prod
          filters:
            branches:
              only: main
  push-to-remote-main:
    jobs:
      - test:
          filters:
            branches:
              only: ashannon/jobrunner/dispatch_jobs
      - deploy:
          context:
            - aethersphere-prod
          filters:
            branches:
              only: ashannon/jobrunner/dispatch_jobs

